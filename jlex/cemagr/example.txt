int €hola(10)(20);
int €adios;
€hola := YEAH && NO == !(YEAH && !NO);
€adios := 123 * - 124 - 34 + 45;
€adios(12)(12+34) := €hola(1) * 124 - 34 + 45;

If (YEAH) {
    €adios(12)(12+34) := 0;
}

If (NO) {
    €hola(12)(12+34) := 0;
} Else {
    €adios(12)(12+34) := 0;
}

Loop (YEAH) {
    €adios(12)(12+34) := 0;
}

func int prueba(int €n, int €hola(10)(20)) {
    int €ret;
    switch (€n){
        case 1 => €ret := €ret + 1;
                  €ret := 0;
        case 2 => €ret := 2;
        otherwise => €ret := 3;
    }
    return €ret;
}

Foop (€i := 0; €i == €n; €i := €i + 1;) {
    int €auxi;
    €auxi := €ret;
    €ret := €ret + €prev;
    €prev := €auxi;
}


func int pot(int €n, int €p) {
    int €ret;
    If (€p == 0) {
        €ret := 1;
    } Else {
        int €np;
        €np := €p/2;
        €ret := pot(€n, €np);
        €ret := €ret * €ret;
        If (€p % 2 == 1) {
            €ret := €ret * €n;
        }
    }
    return €ret;
}

func int fib(int €n) {
    int €ret;
    int €prev;
    €ret := 1;
    €prev := 0;
    int €i;
    Foop (€i := 0; €i < €n; €i := €i + 1;) {
        int €auxi;
        €auxi := €ret;
        €ret := €ret + €prev;
        €prev := €auxi;
        €string := "Un string";
    }
    return €ret;
}